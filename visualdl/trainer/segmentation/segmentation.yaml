type: "segmentation"

data:
  train: "C:/Users/phili/Downloads/Telegram Desktop/CellsFinal/Cells/right side/cells/train"
  valid: "C:/Users/phili/Downloads/Telegram Desktop/CellsFinal/Cells/right side/cells/valid"
  test: "C:/Users/phili/Downloads/Telegram Desktop/CellsFinal/Cells/right side/cells/valid"
  #train: "E:/source/repos/HSAData/Evican/train"
  #valid: "E:/source/repos/HSAData/Evican/valid"
  #test: "E:/source/repos/HSAData/Evican/valid"

  weights: 
    - "None"
    - "imagenet"
    - "imagenet"

  save_folder: "" 

# anchors
models:
  - backbone: "timm-u-resnest50d"
    decoder: "UnetPlusPlus"

  - backbone: "timm-u-resnest50d"
    decoder: "EfficientUnetPlusPlus"

settings:
  nc: 2
  in_channels: 3
  epochs: 5000
  optimizer: "AdamW"
  lr: 0.00001
  workers: 0
  batch_size:
    - 8
    - 8

  gradient_accumulation: 8
  criterions: #criterions defined in segmentation_models_pytorch.utils.losses can be used
    - "CrossEntropyLoss"
    - "DiceLoss"
  tensorboard_log_dir: "tensorboard_logs"
  metrics:
    - name: "Accuracy"
      params: "num_classes=2"
    - name: "IoU"
      params: "num_classes=2"
  monitor_metric_name: "IoU"
  monitor_metric_params: "num_classes=2"
  class_weights: False
  calculate_weight_map: True

transforms:
  Resize: width = 128, height = 128
  HorizontalFlip: p=0.25
  VerticalFlip: p=0.25
  RandomBrightnessContrast: p=0.15
  RGBShift: p=0.1
  RandomShadow : p=0.1
  GaussianBlur: p=0.0
  Transpose: p=0.1
  RandomRotate90: p=0.5
  Perspective: p=0.0
  Affine: p=0.0
  ToGray: p=0.15
  RandomScale: p=0.0


  

